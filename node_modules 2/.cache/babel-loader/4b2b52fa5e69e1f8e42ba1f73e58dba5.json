{"ast":null,"code":"var _jsxFileName = \"/Users/janderoyalty/Library/Mobile Documents/com~apple~CloudDocs/Jay/Ada/C17/Project Wemes FE/project-wemes-fe/src/Components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport PropTypes from \"prop-types\";\nimport SortTransactionMenu from \"../Components/SortTransactionMenu\"; // // DISPLAY TRANSACTION\n// const DisplayTransactionModal = (props) => {\n//   const [transactionCustomer, setTransactionCustomer] = useState(0);\n//   const [transactionAdmin, setTransactionAdmin] = useState(0);\n//   const [transactionDate, setTransactionDate] = useState();\n//   const [transactionData, setTransactionData] = useState({\n//     message: \"\",\n//     item: [],\n//   });\n//   const transaction_url = `${props.WEMES_URL}transactions/${props.index + 1}/`\n//   axios\n//     .get(`${transaction_url}`)\n//     .then((response) => {\n//       console.log(response.data);\n//       setTransactionCustomer(response.data.customer);\n//       setTransactionDate(response.data.drop_off);\n//       setTransactionAdmin(response.data.admin);\n//     })\n//     .catch((err) => {\n//       alert(err);\n//     });\n// const addItem = ({\n//   drop_off,\n//   due_date,\n//   transaction,\n//   type,\n//   color,\n//   is_shoe,\n//   follow_up,\n//   description,\n//   tag_id,\n// }) => {\n//   axios\n//     .post(`${transaction_url}`, {\n//       drop_off: drop_off,\n//       due_date: due_date,\n//       transaction: transaction,\n//       type: type,\n//       color: color,\n//       is_shoe: is_shoe,\n//       follow_up: follow_up,\n//       description: description,\n//       tag_id: tag_id,\n//     })\n//     .then((response) => {\n//       console.log(response);\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// };\n// const [itemData, setItemData] = useState({\n//   drop_off: \"\",\n//   due_date: \"\",\n//   transaction: \"\",\n//   tag_id: \"\",\n//   type: \"\",\n//   color: \"\",\n//   is_shoe: \"\",\n//   follow_up: \"\",\n//   description: \"\",\n// });\n// const submitItemData = (event) => {\n//   event.preventDefault();\n//   addItem(itemData);\n//   setItemData({\n//     drop_off: \"\",\n//     due_date: \"\",\n//     transaction: \"\",\n//     tag_id: \"\",\n//     type: \"\",\n//     color: \"\",\n//     is_shoe: \"\",\n//     follow_up: \"\",\n//     description: \"\",\n//   });\n// };\n// return (\n//   <Modal\n//     {...props}\n//     size=\"lg\"\n//     aria-labelledby=\"contained-modal-title-vcenter\"\n//     centered\n//   >\n//     <Modal.Header closeButton>\n//       <Modal.Title id=\"contained-modal-title-vcenter\">\n//         Add New Users\n//       </Modal.Title>\n//     </Modal.Header>\n//     <Modal.Body>\n//       <Form size=\"lg\" onSubmit={submitItemData}>\n//         <Form.Group className=\"mb-3\" controlId=\"formDropOff\">\n//           <Form.Label>Drop Off</Form.Label>\n//           <Form.Control\n//             type=\"name\"\n//             placeholder=\"Drop Off\"\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 drop_off: event.target.value,\n//               })\n//             }\n//           />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formDueDate\">\n//           <Form.Label>Due Date</Form.Label>\n//           <Form.Control\n//             type=\"name\"\n//             placeholder=\"Due Date\"\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 due_date: event.target.value,\n//               })\n//             }\n//           />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formTransaction\">\n//           <Form.Label>Transaction</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             placeholder=\"Transaction\"\n//             onChange={(event) =>\n//               setItemData({ ...itemData, transaction: event.target.value })\n//             }\n//           />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formTagID\">\n//           <Form.Label>Tag ID</Form.Label>\n//           <Form.Control\n//             type=\"tel\"\n//             name=\"phone_num\"\n//             placeholder=\"Tag ID\"\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 tag_id: event.target.value,\n//               })\n//             }\n//           />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formType\">\n//           <Form.Label>Type</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Type\"\n//             // disabled\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 type: event.target.value,\n//               })\n//             }\n//           />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formColor\">\n//           <Form.Label>Color</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Color\"\n//             // disabled\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 color: event.target.value,\n//               })\n//             }\n//           />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formIsShoe\">\n//           <Form.Label>Shoes</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Are these shoes\"\n//             // disabled\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 is_shoe: event.target.value,\n//               })\n//             }\n//           />            \n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formIsFollow\">\n//           <Form.Label>Follow Up</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Do they need a follow up\"\n//             // disabled\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 follow_up: event.target.value,\n//               })\n//             }\n//           />            \n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n//           <Form.Label>Description</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Description\"\n//             // disabled\n//             onChange={(event) =>\n//               setItemData({\n//                 ...itemData,\n//                 description: event.target.value,\n//               })\n//             }\n//           />            \n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group>\n//         {/* <Form.Group className=\"mb-3\" controlId=\"formTransactions\">\n//           <Form.Label>Transactions</Form.Label>\n//           <Form.Control type=\"text\" placeholder=\"\" disabled />\n//           <Form.Text className=\"text-muted\"></Form.Text>\n//         </Form.Group> */}\n//         {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n//       <Form.Check type=\"checkbox\" value=\"false\" label=\"Check me out\" />\n//     </Form.Group> */}\n//         <Button variant=\"warning\" type=\"submit\" onClick={props.onHide}>\n//           Submit\n//         </Button>\n//       </Form>\n//     </Modal.Body>\n//   </Modal>\n// );\n// }\n//   const submitTransactionData = (event) => {\n//     event.preventDefault();\n//     addItem(transactionData);\n//     setTransactionData({\n//       first_name: \"\",\n//       last_name: \"\",\n//       phone_num: \"\",\n//       last_four: \"\",\n//       email: \"\",\n//       transactions: [],\n//     });\n//   };\n//   return (\n//     <Modal\n//       {...props}\n//       size=\"lg\"\n//       aria-labelledby=\"contained-modal-title-vcenter\"\n//       centered\n//     >\n//       <Modal.Header closeButton>\n//         <Modal.Title id=\"contained-modal-title-vcenter\">\n//           {transactionCustomer}'s Transaction by {transactionAdmin}\n//           <br />\n//           Dropped Off: {transactionDate}\n//           <Form size=\"lg\" onSubmit={submitTransactionData}>\n//             <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n//               <Form.Label>Description</Form.Label>\n//               <Form.Control\n//                 type=\"name\"\n//                 // placeholder=\"description\"\n//                 onChange={(event) =>\n//                   setTransactionData({\n//                     ...transactionData,\n//                     description: event.target.value,\n//                   })\n//                 }\n//               />\n//               <Form.Text className=\"text-muted\"></Form.Text>\n//             </Form.Group>\n//             <Button variant=\"warning\" type=\"submit\" onClick={props.onHide}>\n//               Add Item\n//             </Button>\n//           </Form>\n//         </Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>BODY </Modal.Body>\n//     </Modal>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionsList = _ref => {\n  _s();\n\n  let {\n    transactionData,\n    WEMES_URL\n  } = _ref;\n  const [modalShow, setModalShow] = useState(false);\n  const [clickedIndex, setClickedIndex] = useState(0);\n  const [sortBy, setSortBy] = useState(\"id\");\n  const [orderBy, setOrderBy] = useState(\"desc\");\n  const sortedTransactions = transactionData.sort((a, b) => {\n    let order = orderBy === \"asc\" ? 1 : -1;\n    let sortByA = sortBy === \"id\" ? a[sortBy] : a[sortBy];\n    let sortByB = sortBy === \"id\" ? b[sortBy] : b[sortBy];\n    return sortByA < sortByB ? -1 * order : 1 * order;\n  });\n\n  const transactionInfo = () => {\n    return sortedTransactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: () => {\n        setClickedIndex(index);\n        setModalShow(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.customer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.admin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.drop_off\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SortTransactionMenu, {\n        sortBy: sortBy,\n        onSortByChange: sortOption => {\n          setSortBy(sortOption);\n        },\n        orderBy: orderBy,\n        onOrderByChange: orderOption => {\n          setOrderBy(orderOption);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dropped Off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactionInfo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionsList, \"xeajsZiETo5Doi/OeR5qJyzkIq4=\");\n\n_c = TransactionsList;\nTransactionsList.propTypes = {\n  transactions: PropTypes.array\n};\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useState","Table","PropTypes","SortTransactionMenu","TransactionsList","transactionData","WEMES_URL","modalShow","setModalShow","clickedIndex","setClickedIndex","sortBy","setSortBy","orderBy","setOrderBy","sortedTransactions","sort","a","b","order","sortByA","sortByB","transactionInfo","map","transaction","index","customer","admin","drop_off","description","items","length","sortOption","orderOption","propTypes","transactions","array"],"sources":["/Users/janderoyalty/Library/Mobile Documents/com~apple~CloudDocs/Jay/Ada/C17/Project Wemes FE/project-wemes-fe/src/Components/TransactionsList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport PropTypes from \"prop-types\";\nimport SortTransactionMenu from \"../Components/SortTransactionMenu\";\n\n\n// // DISPLAY TRANSACTION\n// const DisplayTransactionModal = (props) => {\n//   const [transactionCustomer, setTransactionCustomer] = useState(0);\n//   const [transactionAdmin, setTransactionAdmin] = useState(0);\n//   const [transactionDate, setTransactionDate] = useState();\n//   const [transactionData, setTransactionData] = useState({\n//     message: \"\",\n//     item: [],\n//   });\n  \n//   const transaction_url = `${props.WEMES_URL}transactions/${props.index + 1}/`\n  \n//   axios\n//     .get(`${transaction_url}`)\n//     .then((response) => {\n//       console.log(response.data);\n//       setTransactionCustomer(response.data.customer);\n//       setTransactionDate(response.data.drop_off);\n//       setTransactionAdmin(response.data.admin);\n//     })\n//     .catch((err) => {\n//       alert(err);\n//     });\n\n  // const addItem = ({\n  //   drop_off,\n  //   due_date,\n  //   transaction,\n  //   type,\n  //   color,\n  //   is_shoe,\n  //   follow_up,\n  //   description,\n  //   tag_id,\n  // }) => {\n  //   axios\n  //     .post(`${transaction_url}`, {\n  //       drop_off: drop_off,\n  //       due_date: due_date,\n  //       transaction: transaction,\n  //       type: type,\n  //       color: color,\n  //       is_shoe: is_shoe,\n  //       follow_up: follow_up,\n  //       description: description,\n  //       tag_id: tag_id,\n  //     })\n  //     .then((response) => {\n  //       console.log(response);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  // const [itemData, setItemData] = useState({\n  //   drop_off: \"\",\n  //   due_date: \"\",\n  //   transaction: \"\",\n  //   tag_id: \"\",\n  //   type: \"\",\n  //   color: \"\",\n  //   is_shoe: \"\",\n  //   follow_up: \"\",\n  //   description: \"\",\n  // });\n\n  // const submitItemData = (event) => {\n  //   event.preventDefault();\n  //   addItem(itemData);\n  //   setItemData({\n  //     drop_off: \"\",\n  //     due_date: \"\",\n  //     transaction: \"\",\n  //     tag_id: \"\",\n  //     type: \"\",\n  //     color: \"\",\n  //     is_shoe: \"\",\n  //     follow_up: \"\",\n  //     description: \"\",\n  //   });\n  // };\n  \n  // return (\n  //   <Modal\n  //     {...props}\n  //     size=\"lg\"\n  //     aria-labelledby=\"contained-modal-title-vcenter\"\n  //     centered\n  //   >\n  //     <Modal.Header closeButton>\n  //       <Modal.Title id=\"contained-modal-title-vcenter\">\n  //         Add New Users\n  //       </Modal.Title>\n  //     </Modal.Header>\n  //     <Modal.Body>\n  //       <Form size=\"lg\" onSubmit={submitItemData}>\n  //         <Form.Group className=\"mb-3\" controlId=\"formDropOff\">\n  //           <Form.Label>Drop Off</Form.Label>\n  //           <Form.Control\n  //             type=\"name\"\n  //             placeholder=\"Drop Off\"\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 drop_off: event.target.value,\n  //               })\n  //             }\n  //           />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n  \n  //         <Form.Group className=\"mb-3\" controlId=\"formDueDate\">\n  //           <Form.Label>Due Date</Form.Label>\n  //           <Form.Control\n  //             type=\"name\"\n  //             placeholder=\"Due Date\"\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 due_date: event.target.value,\n  //               })\n  //             }\n  //           />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n  \n  //         <Form.Group className=\"mb-3\" controlId=\"formTransaction\">\n  //           <Form.Label>Transaction</Form.Label>\n  //           <Form.Control\n  //             type=\"email\"\n  //             placeholder=\"Transaction\"\n  //             onChange={(event) =>\n  //               setItemData({ ...itemData, transaction: event.target.value })\n  //             }\n  //           />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n  \n  //         <Form.Group className=\"mb-3\" controlId=\"formTagID\">\n  //           <Form.Label>Tag ID</Form.Label>\n  //           <Form.Control\n  //             type=\"tel\"\n  //             name=\"phone_num\"\n  //             placeholder=\"Tag ID\"\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 tag_id: event.target.value,\n  //               })\n  //             }\n  //           />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n  \n  //         <Form.Group className=\"mb-3\" controlId=\"formType\">\n  //           <Form.Label>Type</Form.Label>\n  //           <Form.Control\n  //             type=\"text\"\n  //             placeholder=\"Type\"\n  //             // disabled\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 type: event.target.value,\n  //               })\n  //             }\n  //           />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n          \n  //         <Form.Group className=\"mb-3\" controlId=\"formColor\">\n  //           <Form.Label>Color</Form.Label>\n  //           <Form.Control\n  //             type=\"text\"\n  //             placeholder=\"Color\"\n  //             // disabled\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 color: event.target.value,\n  //               })\n  //             }\n  //           />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n\n  //         <Form.Group className=\"mb-3\" controlId=\"formIsShoe\">\n  //           <Form.Label>Shoes</Form.Label>\n  //           <Form.Control\n  //             type=\"text\"\n  //             placeholder=\"Are these shoes\"\n  //             // disabled\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 is_shoe: event.target.value,\n  //               })\n  //             }\n  //           />            \n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n\n  //         <Form.Group className=\"mb-3\" controlId=\"formIsFollow\">\n  //           <Form.Label>Follow Up</Form.Label>\n  //           <Form.Control\n  //             type=\"text\"\n  //             placeholder=\"Do they need a follow up\"\n  //             // disabled\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 follow_up: event.target.value,\n  //               })\n  //             }\n  //           />            \n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n\n  //         <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n  //           <Form.Label>Description</Form.Label>\n  //           <Form.Control\n  //             type=\"text\"\n  //             placeholder=\"Description\"\n  //             // disabled\n  //             onChange={(event) =>\n  //               setItemData({\n  //                 ...itemData,\n  //                 description: event.target.value,\n  //               })\n  //             }\n  //           />            \n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group>\n\n  //         {/* <Form.Group className=\"mb-3\" controlId=\"formTransactions\">\n  //           <Form.Label>Transactions</Form.Label>\n  //           <Form.Control type=\"text\" placeholder=\"\" disabled />\n  //           <Form.Text className=\"text-muted\"></Form.Text>\n  //         </Form.Group> */}\n  \n  //         {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n  //       <Form.Check type=\"checkbox\" value=\"false\" label=\"Check me out\" />\n  //     </Form.Group> */}\n  \n  //         <Button variant=\"warning\" type=\"submit\" onClick={props.onHide}>\n  //           Submit\n  //         </Button>\n  //       </Form>\n  //     </Modal.Body>\n  //   </Modal>\n  // );\n  // }\n  \n\n  \n//   const submitTransactionData = (event) => {\n//     event.preventDefault();\n//     addItem(transactionData);\n//     setTransactionData({\n//       first_name: \"\",\n//       last_name: \"\",\n//       phone_num: \"\",\n//       last_four: \"\",\n//       email: \"\",\n//       transactions: [],\n//     });\n//   };\n\n//   return (\n//     <Modal\n//       {...props}\n//       size=\"lg\"\n//       aria-labelledby=\"contained-modal-title-vcenter\"\n//       centered\n//     >\n//       <Modal.Header closeButton>\n//         <Modal.Title id=\"contained-modal-title-vcenter\">\n//           {transactionCustomer}'s Transaction by {transactionAdmin}\n//           <br />\n//           Dropped Off: {transactionDate}\n//           <Form size=\"lg\" onSubmit={submitTransactionData}>\n//             <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n//               <Form.Label>Description</Form.Label>\n//               <Form.Control\n//                 type=\"name\"\n//                 // placeholder=\"description\"\n//                 onChange={(event) =>\n//                   setTransactionData({\n//                     ...transactionData,\n//                     description: event.target.value,\n//                   })\n//                 }\n//               />\n//               <Form.Text className=\"text-muted\"></Form.Text>\n//             </Form.Group>\n//             <Button variant=\"warning\" type=\"submit\" onClick={props.onHide}>\n//               Add Item\n//             </Button>\n//           </Form>\n//         </Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>BODY </Modal.Body>\n//     </Modal>\n//   );\n// };\n\nconst TransactionsList = ({ transactionData, WEMES_URL }) => {\n  const [modalShow, setModalShow] = useState(false);\n  const [clickedIndex, setClickedIndex] = useState(0);\n  const [sortBy, setSortBy] = useState(\"id\");\n  const [orderBy, setOrderBy] = useState(\"desc\");\n\n  const sortedTransactions = transactionData.sort((a, b) => {\n    let order = orderBy === \"asc\" ? 1 : -1;\n    let sortByA = sortBy === \"id\" ? a[sortBy] : a[sortBy];\n    let sortByB = sortBy === \"id\" ? b[sortBy] : b[sortBy];\n    return sortByA < sortByB ? -1 * order : 1 * order;\n  });\n\n  const transactionInfo = () => {\n    return sortedTransactions.map((transaction, index) => (\n      <tr\n        key={index}\n        onClick={() => {\n          setClickedIndex(index);\n          setModalShow(true);\n        }}\n      >\n        <td>{transaction.customer}</td>\n        <td>{transaction.admin}</td>\n        <td>{transaction.drop_off}</td>\n        <td>{transaction.description}</td>\n        <td>{transaction.items.length}</td>\n      </tr>\n    ));\n  };\n\n  return (\n    <>\n      <div>\n        {/* <DisplayTransactionModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          WEMES_URL={WEMES_URL}\n          index={clickedIndex}\n        /> */}\n        <SortTransactionMenu\n          sortBy={sortBy}\n          onSortByChange={(sortOption) => {\n            setSortBy(sortOption);\n          }}\n          orderBy={orderBy}\n          onOrderByChange={(orderOption) => {\n            setOrderBy(orderOption);\n          }}\n        />\n      </div>\n      <Table striped hover>\n        <thead>\n          <tr>\n            <th>Customer</th>\n            <th>Admin</th>\n            <th>Dropped Off</th>\n            <th>Message</th>\n            <th>Items</th>\n          </tr>\n        </thead>\n        <tbody>{transactionInfo()}</tbody>\n      </Table>\n    </>\n  );\n};\n\nTransactionsList.propTypes = {\n  transactions: PropTypes.array,\n};\n\nexport default TransactionsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}